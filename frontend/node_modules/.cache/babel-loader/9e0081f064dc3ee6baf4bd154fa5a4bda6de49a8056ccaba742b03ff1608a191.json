{"ast":null,"code":"var _jsxFileName = \"/Users/zachary/Desktop/reddit-saved-gallery/src/components/MediaGallery.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport MediaItem from './MediaItem';\nimport LoadingSpinner from './LoadingSpinner';\nimport './MediaGallery.css'; // We'll create this file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MediaGallery({\n  token\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [initialLoading, setInitialLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [username, setUsername] = useState('');\n  const [visiblePosts, setVisiblePosts] = useState(1); // Start with 1 post visible\n  const [hasMore, setHasMore] = useState(true);\n\n  // Reference to observe the last post for infinite scrolling\n  const observer = useRef();\n  const lastPostElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        // Load one more post when the last one is visible\n        setVisiblePosts(prevVisiblePosts => Math.min(prevVisiblePosts + 1, posts.length));\n\n        // If we've shown all posts, there's no more to load\n        if (visiblePosts >= posts.length - 1) {\n          setHasMore(false);\n        }\n      }\n    }, {\n      threshold: 0.5\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore, posts.length, visiblePosts]);\n  useEffect(() => {\n    const fetchSavedMedia = async () => {\n      if (!token) return;\n      try {\n        setLoading(true);\n\n        // Get user info through proxy\n        console.log(\"Fetching user info...\");\n        const userResponse = await axios.get('http://localhost:4000/api/me', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const userInfo = userResponse.data;\n        setUsername(userInfo.name);\n        console.log(`Fetching saved posts for ${userInfo.name}...`);\n        // Get saved posts through proxy\n        const savedResponse = await axios.get(`http://localhost:4000/api/saved/${userInfo.name}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        // Extract posts and filter for media\n        const savedItems = savedResponse.data.data.children.map(child => child.data).filter(post => {\n          // Check if it's a submission (not a comment)\n          if (!post.title) return false;\n\n          // Check for various media types\n          return post.is_video || post.post_hint === 'image' || post.url.match(/\\.(jpg|jpeg|png|gif)$/) || post.url.includes('imgur.com') || post.url.includes('gfycat.com') || post.url.includes('redgifs.com') || post.url.includes('i.redd.it');\n        });\n        console.log(`Found ${savedItems.length} media posts`);\n        setPosts(savedItems);\n\n        // If there are posts, start with 1 visible\n        if (savedItems.length > 0) {\n          setVisiblePosts(1);\n          setHasMore(savedItems.length > 1);\n        } else {\n          setHasMore(false);\n        }\n      } catch (err) {\n        var _err$response, _err$response2, _err$response2$data;\n        console.error('Error fetching saved media:', err);\n        console.error('Response data:', (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data);\n        setError(`Failed to load your saved posts: ${((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message}`);\n      } finally {\n        setLoading(false);\n        setInitialLoading(false);\n      }\n    };\n    fetchSavedMedia();\n  }, [token]);\n  if (initialLoading) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 30\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Saved Media for u/\", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Showing \", Math.min(visiblePosts, posts.length), \" of \", posts.length, \" saved media posts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-media\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No media found in your saved posts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Try saving some posts with images, videos, or GIFs!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-feed\",\n      children: [posts.slice(0, visiblePosts).map((post, index) => {\n        // Add ref to last post for infinite scrolling\n        if (index === visiblePosts - 1) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: lastPostElementRef,\n            className: \"post-container\",\n            children: /*#__PURE__*/_jsxDEV(MediaItem, {\n              post: post\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-container\",\n            children: /*#__PURE__*/_jsxDEV(MediaItem, {\n              post: post\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this);\n        }\n      }), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 23\n      }, this), !hasMore && posts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"end-message\",\n        children: \"You've reached the end of your saved posts!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(MediaGallery, \"ukBndM7j7n6b5HUVt7N+MJE0eY0=\");\n_c = MediaGallery;\nexport default MediaGallery;\nvar _c;\n$RefreshReg$(_c, \"MediaGallery\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","MediaItem","LoadingSpinner","jsxDEV","_jsxDEV","MediaGallery","token","_s","posts","setPosts","loading","setLoading","initialLoading","setInitialLoading","error","setError","username","setUsername","visiblePosts","setVisiblePosts","hasMore","setHasMore","observer","lastPostElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevVisiblePosts","Math","min","length","threshold","observe","fetchSavedMedia","console","log","userResponse","get","headers","userInfo","data","name","savedResponse","savedItems","children","map","child","filter","post","title","is_video","post_hint","url","match","includes","err","_err$response","_err$response2","_err$response2$data","response","message","fileName","_jsxFileName","lineNumber","columnNumber","className","slice","index","ref","id","_c","$RefreshReg$"],"sources":["/Users/zachary/Desktop/reddit-saved-gallery/src/components/MediaGallery.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport MediaItem from './MediaItem';\nimport LoadingSpinner from './LoadingSpinner';\nimport './MediaGallery.css'; // We'll create this file for styling\n\nfunction MediaGallery({ token }) {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [initialLoading, setInitialLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [username, setUsername] = useState('');\n  const [visiblePosts, setVisiblePosts] = useState(1); // Start with 1 post visible\n  const [hasMore, setHasMore] = useState(true);\n  \n  // Reference to observe the last post for infinite scrolling\n  const observer = useRef();\n  const lastPostElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    \n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        // Load one more post when the last one is visible\n        setVisiblePosts(prevVisiblePosts => \n          Math.min(prevVisiblePosts + 1, posts.length)\n        );\n        \n        // If we've shown all posts, there's no more to load\n        if (visiblePosts >= posts.length - 1) {\n          setHasMore(false);\n        }\n      }\n    }, { threshold: 0.5 });\n    \n    if (node) observer.current.observe(node);\n  }, [loading, hasMore, posts.length, visiblePosts]);\n\n  useEffect(() => {\n    const fetchSavedMedia = async () => {\n      if (!token) return;\n      \n      try {\n        setLoading(true);\n        \n        // Get user info through proxy\n        console.log(\"Fetching user info...\");\n        const userResponse = await axios.get('http://localhost:4000/api/me', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        \n        const userInfo = userResponse.data;\n        setUsername(userInfo.name);\n        \n        console.log(`Fetching saved posts for ${userInfo.name}...`);\n        // Get saved posts through proxy\n        const savedResponse = await axios.get(\n          `http://localhost:4000/api/saved/${userInfo.name}`, \n          {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          }\n        );\n        \n        // Extract posts and filter for media\n        const savedItems = savedResponse.data.data.children\n          .map(child => child.data)\n          .filter(post => {\n            // Check if it's a submission (not a comment)\n            if (!post.title) return false;\n            \n            // Check for various media types\n            return (\n              post.is_video ||\n              post.post_hint === 'image' ||\n              post.url.match(/\\.(jpg|jpeg|png|gif)$/) ||\n              post.url.includes('imgur.com') ||\n              post.url.includes('gfycat.com') ||\n              post.url.includes('redgifs.com') ||\n              post.url.includes('i.redd.it')\n            );\n          });\n        \n        console.log(`Found ${savedItems.length} media posts`);\n        setPosts(savedItems);\n        \n        // If there are posts, start with 1 visible\n        if (savedItems.length > 0) {\n          setVisiblePosts(1);\n          setHasMore(savedItems.length > 1);\n        } else {\n          setHasMore(false);\n        }\n        \n      } catch (err) {\n        console.error('Error fetching saved media:', err);\n        console.error('Response data:', err.response?.data);\n        setError(`Failed to load your saved posts: ${err.response?.data?.error || err.message}`);\n      } finally {\n        setLoading(false);\n        setInitialLoading(false);\n      }\n    };\n\n    fetchSavedMedia();\n  }, [token]);\n\n  if (initialLoading) return <LoadingSpinner />;\n  \n  if (error) return <div className=\"error-message\">{error}</div>;\n\n  return (\n    <div className=\"gallery-container\">\n      <div className=\"gallery-header\">\n        <h2>Saved Media for u/{username}</h2>\n        <p>Showing {Math.min(visiblePosts, posts.length)} of {posts.length} saved media posts</p>\n      </div>\n      \n      {posts.length === 0 ? (\n        <div className=\"no-media\">\n          <p>No media found in your saved posts.</p>\n          <p>Try saving some posts with images, videos, or GIFs!</p>\n        </div>\n      ) : (\n        <div className=\"media-feed\">\n          {posts.slice(0, visiblePosts).map((post, index) => {\n            // Add ref to last post for infinite scrolling\n            if (index === visiblePosts - 1) {\n              return (\n                <div ref={lastPostElementRef} key={post.id} className=\"post-container\">\n                  <MediaItem post={post} />\n                </div>\n              );\n            } else {\n              return (\n                <div key={post.id} className=\"post-container\">\n                  <MediaItem post={post} />\n                </div>\n              );\n            }\n          })}\n          {loading && <LoadingSpinner />}\n          {!hasMore && posts.length > 0 && (\n            <div className=\"end-message\">\n              You've reached the end of your saved posts!\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MediaGallery;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}