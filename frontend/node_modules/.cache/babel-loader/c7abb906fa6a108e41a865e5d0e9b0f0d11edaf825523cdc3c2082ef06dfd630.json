{"ast":null,"code":"var _jsxFileName = \"/Users/zachary/Desktop/reddit-saved-gallery/src/components/MediaItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MediaItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MediaItem({\n  post\n}) {\n  _s();\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(false);\n  const [showInfo, setShowInfo] = useState(true);\n\n  // Get media URL based on post type\n  const getMediaUrl = post => {\n    // Handle direct image links\n    if (post.url.match(/\\.(jpg|jpeg|png|gif)$/i)) {\n      return post.url;\n    }\n\n    // Handle Reddit videos\n    if (post.is_video && post.media && post.media.reddit_video) {\n      return post.media.reddit_video.fallback_url;\n    }\n\n    // Handle imgur links without extension\n    if (post.url.includes('imgur.com') && !post.url.match(/\\.(jpg|jpeg|png|gif)$/i)) {\n      return `${post.url}.jpg`;\n    }\n\n    // Handle gfycat links\n    if (post.url.includes('gfycat.com')) {\n      const gfycatId = post.url.split('/').pop();\n      return `https://thumbs.gfycat.com/${gfycatId}-size_restricted.gif`;\n    }\n\n    // Default case\n    return post.thumbnail !== 'default' ? post.thumbnail : null;\n  };\n  const mediaUrl = getMediaUrl(post);\n  const isVideo = post.is_video || (mediaUrl === null || mediaUrl === void 0 ? void 0 : mediaUrl.includes('.mp4'));\n  const isGif = !isVideo && ((mediaUrl === null || mediaUrl === void 0 ? void 0 : mediaUrl.includes('.gif')) || post.url.includes('gfycat'));\n  const handleLoad = () => setLoaded(true);\n  const handleError = () => setError(true);\n\n  // Toggle info panel when clicking on media\n  const toggleInfo = () => {\n    setShowInfo(!showInfo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"media-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-content\",\n      onClick: toggleInfo,\n      children: [!loaded && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 31\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-error\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Failed to load media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: post.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"original-link\",\n          children: \"Open original\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this) : isVideo ? /*#__PURE__*/_jsxDEV(\"video\", {\n        controls: true,\n        loop: true,\n        muted: true,\n        onLoadedData: handleLoad,\n        onError: handleError,\n        src: mediaUrl,\n        className: \"centered-media\",\n        onClick: e => e.stopPropagation() // Prevent video controls from toggling info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : isGif ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mediaUrl,\n        alt: post.title,\n        onLoad: handleLoad,\n        onError: handleError,\n        className: \"centered-media\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mediaUrl,\n        alt: post.title,\n        onLoad: handleLoad,\n        onError: handleError,\n        className: \"centered-media\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), showInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"post-title\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"subreddit\",\n          children: [\"r/\", post.subreddit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"author\",\n          children: [\"Posted by u/\", post.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://reddit.com${post.permalink}`,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"view-post-button\",\n        children: \"View on Reddit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(MediaItem, \"idWSJJDjKyAM198WWGNouJRlmtw=\");\n_c = MediaItem;\nexport default MediaItem;\nvar _c;\n$RefreshReg$(_c, \"MediaItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MediaItem","post","_s","loaded","setLoaded","error","setError","showInfo","setShowInfo","getMediaUrl","url","match","is_video","media","reddit_video","fallback_url","includes","gfycatId","split","pop","thumbnail","mediaUrl","isVideo","isGif","handleLoad","handleError","toggleInfo","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","controls","loop","muted","onLoadedData","onError","src","e","stopPropagation","alt","title","onLoad","subreddit","author","permalink","_c","$RefreshReg$"],"sources":["/Users/zachary/Desktop/reddit-saved-gallery/src/components/MediaItem.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './MediaItem.css';\n\nfunction MediaItem({ post }) {\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(false);\n  const [showInfo, setShowInfo] = useState(true);\n  \n  // Get media URL based on post type\n  const getMediaUrl = (post) => {\n    // Handle direct image links\n    if (post.url.match(/\\.(jpg|jpeg|png|gif)$/i)) {\n      return post.url;\n    }\n    \n    // Handle Reddit videos\n    if (post.is_video && post.media && post.media.reddit_video) {\n      return post.media.reddit_video.fallback_url;\n    }\n    \n    // Handle imgur links without extension\n    if (post.url.includes('imgur.com') && !post.url.match(/\\.(jpg|jpeg|png|gif)$/i)) {\n      return `${post.url}.jpg`;\n    }\n    \n    // Handle gfycat links\n    if (post.url.includes('gfycat.com')) {\n      const gfycatId = post.url.split('/').pop();\n      return `https://thumbs.gfycat.com/${gfycatId}-size_restricted.gif`;\n    }\n    \n    // Default case\n    return post.thumbnail !== 'default' ? post.thumbnail : null;\n  };\n  \n  const mediaUrl = getMediaUrl(post);\n  const isVideo = post.is_video || mediaUrl?.includes('.mp4');\n  const isGif = !isVideo && (mediaUrl?.includes('.gif') || post.url.includes('gfycat'));\n  \n  const handleLoad = () => setLoaded(true);\n  const handleError = () => setError(true);\n  \n  // Toggle info panel when clicking on media\n  const toggleInfo = () => {\n    setShowInfo(!showInfo);\n  };\n\n  return (\n    <div className=\"media-item\">\n      <div className=\"media-content\" onClick={toggleInfo}>\n        {!loaded && !error && <div className=\"media-loading\">Loading...</div>}\n        \n        {error ? (\n          <div className=\"media-error\">\n            <p>Failed to load media</p>\n            <a href={post.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"original-link\">\n              Open original\n            </a>\n          </div>\n        ) : isVideo ? (\n          <video \n            controls\n            loop\n            muted\n            onLoadedData={handleLoad}\n            onError={handleError}\n            src={mediaUrl}\n            className=\"centered-media\"\n            onClick={(e) => e.stopPropagation()} // Prevent video controls from toggling info\n          />\n        ) : isGif ? (\n          <img \n            src={mediaUrl}\n            alt={post.title}\n            onLoad={handleLoad}\n            onError={handleError}\n            className=\"centered-media\"\n          />\n        ) : (\n          <img \n            src={mediaUrl}\n            alt={post.title}\n            onLoad={handleLoad}\n            onError={handleError}\n            className=\"centered-media\"\n          />\n        )}\n      </div>\n      \n      {showInfo && (\n        <div className=\"media-info\">\n          <h3 className=\"post-title\">{post.title}</h3>\n          <div className=\"post-details\">\n            <span className=\"subreddit\">r/{post.subreddit}</span>\n            <span className=\"author\">Posted by u/{post.author}</span>\n          </div>\n          <a \n            href={`https://reddit.com${post.permalink}`}\n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            className=\"view-post-button\"\n          >\n            View on Reddit\n          </a>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MediaItem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}