{"ast":null,"code":"var _jsxFileName = \"/Users/zachary/Desktop/reddit-saved-gallery/src/components/MediaGallery.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MediaItem from './MediaItem';\nimport LoadingSpinner from './LoadingSpinner';\n\n// Your Reddit credentials - KEEP THESE SECURE!\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst REDDIT_USERNAME = 'YOUR_REDDIT_USERNAME';\nconst REDDIT_PASSWORD = 'YOUR_REDDIT_PASSWORD';\nconst CLIENT_ID = 'YOUR_CLIENT_ID';\nconst CLIENT_SECRET = 'YOUR_CLIENT_SECRET';\nfunction MediaGallery() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchSavedMedia = async () => {\n      try {\n        setLoading(true);\n\n        // Step 1: Get access token\n        const tokenResponse = await axios.post('https://www.reddit.com/api/v1/access_token', `grant_type=password&username=${REDDIT_USERNAME}&password=${REDDIT_PASSWORD}`, {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          auth: {\n            username: CLIENT_ID,\n            password: CLIENT_SECRET\n          }\n        });\n        const accessToken = tokenResponse.data.access_token;\n\n        // Step 2: Fetch saved posts\n        const savedResponse = await axios.get(`https://oauth.reddit.com/user/${REDDIT_USERNAME}/saved`, {\n          headers: {\n            'Authorization': `Bearer ${accessToken}`,\n            'User-Agent': 'web:reddit-saved-gallery:v1.0'\n          },\n          params: {\n            limit: 100\n          }\n        });\n\n        // Extract posts and filter for media content\n        const savedItems = savedResponse.data.data.children.map(child => child.data).filter(post => {\n          // Check if it's a submission (not a comment)\n          if (!post.title) return false;\n\n          // Check for various media types\n          return post.is_video || post.post_hint === 'image' || post.url.match(/\\.(jpg|jpeg|png|gif)$/) || post.url.includes('imgur.com') || post.url.includes('gfycat.com') || post.url.includes('redgifs.com') || post.url.includes('i.redd.it');\n        });\n        setPosts(savedItems);\n      } catch (err) {\n        console.error('Error fetching saved media:', err);\n        setError('Failed to load saved posts. Please check your credentials.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSavedMedia();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Saved Media for u/\", REDDIT_USERNAME]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Showing \", posts.length, \" saved media posts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-media\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No media found in your saved posts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Try saving some posts with images, videos, or GIFs!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-grid\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(MediaItem, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(MediaGallery, \"FFSFm1bVdM1s2gLh8ffGbsIvlRY=\");\n_c = MediaGallery;\nexport default MediaGallery;\nvar _c;\n$RefreshReg$(_c, \"MediaGallery\");","map":{"version":3,"names":["React","useState","useEffect","axios","MediaItem","LoadingSpinner","jsxDEV","_jsxDEV","REDDIT_USERNAME","REDDIT_PASSWORD","CLIENT_ID","CLIENT_SECRET","MediaGallery","_s","posts","setPosts","loading","setLoading","error","setError","fetchSavedMedia","tokenResponse","post","headers","auth","username","password","accessToken","data","access_token","savedResponse","get","params","limit","savedItems","children","map","child","filter","title","is_video","post_hint","url","match","includes","err","console","fileName","_jsxFileName","lineNumber","columnNumber","className","length","id","_c","$RefreshReg$"],"sources":["/Users/zachary/Desktop/reddit-saved-gallery/src/components/MediaGallery.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MediaItem from './MediaItem';\nimport LoadingSpinner from './LoadingSpinner';\n\n// Your Reddit credentials - KEEP THESE SECURE!\nconst REDDIT_USERNAME = 'YOUR_REDDIT_USERNAME';\nconst REDDIT_PASSWORD = 'YOUR_REDDIT_PASSWORD';\nconst CLIENT_ID = 'YOUR_CLIENT_ID';\nconst CLIENT_SECRET = 'YOUR_CLIENT_SECRET';\n\nfunction MediaGallery() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchSavedMedia = async () => {\n      try {\n        setLoading(true);\n        \n        // Step 1: Get access token\n        const tokenResponse = await axios.post(\n          'https://www.reddit.com/api/v1/access_token',\n          `grant_type=password&username=${REDDIT_USERNAME}&password=${REDDIT_PASSWORD}`,\n          {\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            auth: {\n              username: CLIENT_ID,\n              password: CLIENT_SECRET,\n            },\n          }\n        );\n        \n        const accessToken = tokenResponse.data.access_token;\n        \n        // Step 2: Fetch saved posts\n        const savedResponse = await axios.get(\n          `https://oauth.reddit.com/user/${REDDIT_USERNAME}/saved`,\n          {\n            headers: {\n              'Authorization': `Bearer ${accessToken}`,\n              'User-Agent': 'web:reddit-saved-gallery:v1.0',\n            },\n            params: {\n              limit: 100,\n            },\n          }\n        );\n        \n        // Extract posts and filter for media content\n        const savedItems = savedResponse.data.data.children\n          .map(child => child.data)\n          .filter(post => {\n            // Check if it's a submission (not a comment)\n            if (!post.title) return false;\n            \n            // Check for various media types\n            return (\n              post.is_video ||\n              post.post_hint === 'image' ||\n              post.url.match(/\\.(jpg|jpeg|png|gif)$/) ||\n              post.url.includes('imgur.com') ||\n              post.url.includes('gfycat.com') ||\n              post.url.includes('redgifs.com') ||\n              post.url.includes('i.redd.it')\n            );\n          });\n        \n        setPosts(savedItems);\n      } catch (err) {\n        console.error('Error fetching saved media:', err);\n        setError('Failed to load saved posts. Please check your credentials.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchSavedMedia();\n  }, []);\n\n  if (loading) return <LoadingSpinner />;\n  \n  if (error) return <div className=\"error-message\">{error}</div>;\n\n  return (\n    <div className=\"gallery-container\">\n      <div className=\"gallery-header\">\n        <h2>Saved Media for u/{REDDIT_USERNAME}</h2>\n        <p>Showing {posts.length} saved media posts</p>\n      </div>\n      \n      {posts.length === 0 ? (\n        <div className=\"no-media\">\n          <p>No media found in your saved posts.</p>\n          <p>Try saving some posts with images, videos, or GIFs!</p>\n        </div>\n      ) : (\n        <div className=\"media-grid\">\n          {posts.map(post => (\n            <MediaItem key={post.id} post={post} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MediaGallery;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}