{"ast":null,"code":"var _jsxFileName = \"/Users/zachary/Desktop/reddit-saved-gallery/src/components/AuthCallback.js\",\n  _s = $RefreshSig$();\n// src/components/AuthCallback.js (modified)\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport LoadingSpinner from './LoadingSpinner';\n\n// Reddit API credentials\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = 'dBRtI56wSSKD9QZpWXEtbQ';\nconst CLIENT_SECRET = 'XKkDlT5a-dl_u3GKbqf9ZDSrPcpjjQ'; // Leave empty for installed/web apps\nconst REDIRECT_URI = 'http://localhost:3000/auth-callback';\nfunction AuthCallback({\n  setToken\n}) {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [error, setError] = useState(null);\n  const [debug, setDebug] = useState({\n    stage: 'starting',\n    url: location.search,\n    localStorage: {\n      working: true,\n      error: null\n    }\n  });\n  useEffect(() => {\n    const processCallback = async () => {\n      console.log(\"Processing callback, URL:\", location.search);\n      const urlParams = new URLSearchParams(location.search);\n      const code = urlParams.get('code');\n      if (!code) {\n        setError(\"No authorization code received from Reddit\");\n        setDebug(prev => ({\n          ...prev,\n          stage: 'no_code'\n        }));\n        return;\n      }\n      try {\n        setDebug(prev => ({\n          ...prev,\n          stage: 'token_exchange'\n        }));\n        console.log(\"Sending code to proxy server...\");\n\n        // Use our custom proxy server\n        const response = await axios.post('http://localhost:4000/api/token', {\n          code,\n          redirect_uri: REDIRECT_URI,\n          client_id: CLIENT_ID,\n          client_secret: CLIENT_SECRET\n        });\n        console.log(\"Proxy server response:\", response.status);\n        setDebug(prev => ({\n          ...prev,\n          stage: 'received_response',\n          responseStatus: response.status,\n          hasAccessToken: !!response.data.access_token\n        }));\n\n        // Store the tokens\n        const accessToken = response.data.access_token;\n        localStorage.setItem('reddit_token', accessToken);\n        if (response.data.refresh_token) {\n          localStorage.setItem('reddit_refresh_token', response.data.refresh_token);\n        }\n\n        // Update state and redirect\n        setToken(accessToken);\n\n        // Add a small delay before redirecting\n        setTimeout(() => {\n          navigate('/gallery');\n        }, 500);\n      } catch (error) {\n        console.error('Error during token exchange:', error);\n        let errorMessage = 'Authentication failed';\n        let errorDetails = {};\n        if (error.response) {\n          var _error$response$data;\n          errorMessage = `Error ${error.response.status}: ${((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Unknown error'}`;\n          errorDetails = error.response.data;\n        } else {\n          errorMessage = `Request error: ${error.message}`;\n        }\n        setDebug(prev => ({\n          ...prev,\n          stage: 'error',\n          errorMessage,\n          errorDetails\n        }));\n        setError(errorMessage);\n      }\n    };\n    processCallback();\n  }, [location, navigate, setToken]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Authentication Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Debug Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(debug, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        children: \"Return to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-callback-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Authenticating with Reddit...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please wait while we complete the authentication process.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Status: \", debug.stage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(debug, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthCallback, \"Gsr7qwzGYWyOUy6UzsRGxorRMLk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AuthCallback;\nexport default AuthCallback;\nvar _c;\n$RefreshReg$(_c, \"AuthCallback\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","axios","LoadingSpinner","jsxDEV","_jsxDEV","CLIENT_ID","CLIENT_SECRET","REDIRECT_URI","AuthCallback","setToken","_s","navigate","location","error","setError","debug","setDebug","stage","url","search","localStorage","working","processCallback","console","log","urlParams","URLSearchParams","code","get","prev","response","post","redirect_uri","client_id","client_secret","status","responseStatus","hasAccessToken","data","access_token","accessToken","setItem","refresh_token","setTimeout","errorMessage","errorDetails","_error$response$data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","onClick","_c","$RefreshReg$"],"sources":["/Users/zachary/Desktop/reddit-saved-gallery/src/components/AuthCallback.js"],"sourcesContent":["// src/components/AuthCallback.js (modified)\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport LoadingSpinner from './LoadingSpinner';\n\n// Reddit API credentials\nconst CLIENT_ID = 'dBRtI56wSSKD9QZpWXEtbQ';\nconst CLIENT_SECRET = 'XKkDlT5a-dl_u3GKbqf9ZDSrPcpjjQ'; // Leave empty for installed/web apps\nconst REDIRECT_URI = 'http://localhost:3000/auth-callback';\n\nfunction AuthCallback({ setToken }) {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [error, setError] = useState(null);\n  const [debug, setDebug] = useState({\n    stage: 'starting',\n    url: location.search,\n    localStorage: { working: true, error: null }\n  });\n\n  useEffect(() => {\n    const processCallback = async () => {\n      console.log(\"Processing callback, URL:\", location.search);\n      const urlParams = new URLSearchParams(location.search);\n      const code = urlParams.get('code');\n      \n      if (!code) {\n        setError(\"No authorization code received from Reddit\");\n        setDebug(prev => ({ ...prev, stage: 'no_code' }));\n        return;\n      }\n\n      try {\n        setDebug(prev => ({ ...prev, stage: 'token_exchange' }));\n        console.log(\"Sending code to proxy server...\");\n        \n        // Use our custom proxy server\n        const response = await axios.post('http://localhost:4000/api/token', {\n          code,\n          redirect_uri: REDIRECT_URI,\n          client_id: CLIENT_ID,\n          client_secret: CLIENT_SECRET\n        });\n        \n        console.log(\"Proxy server response:\", response.status);\n        setDebug(prev => ({ \n          ...prev, \n          stage: 'received_response',\n          responseStatus: response.status,\n          hasAccessToken: !!response.data.access_token\n        }));\n        \n        // Store the tokens\n        const accessToken = response.data.access_token;\n        localStorage.setItem('reddit_token', accessToken);\n        \n        if (response.data.refresh_token) {\n          localStorage.setItem('reddit_refresh_token', response.data.refresh_token);\n        }\n        \n        // Update state and redirect\n        setToken(accessToken);\n        \n        // Add a small delay before redirecting\n        setTimeout(() => {\n          navigate('/gallery');\n        }, 500);\n        \n      } catch (error) {\n        console.error('Error during token exchange:', error);\n        \n        let errorMessage = 'Authentication failed';\n        let errorDetails = {};\n        \n        if (error.response) {\n          errorMessage = `Error ${error.response.status}: ${error.response.data?.error || 'Unknown error'}`;\n          errorDetails = error.response.data;\n        } else {\n          errorMessage = `Request error: ${error.message}`;\n        }\n        \n        setDebug(prev => ({ \n          ...prev, \n          stage: 'error',\n          errorMessage,\n          errorDetails\n        }));\n        \n        setError(errorMessage);\n      }\n    };\n\n    processCallback();\n  }, [location, navigate, setToken]);\n\n  if (error) {\n    return (\n      <div className=\"auth-error-container\">\n        <h2>Authentication Error</h2>\n        <div className=\"error-message\">{error}</div>\n        <div className=\"debug-section\">\n          <h3>Debug Information</h3>\n          <pre>{JSON.stringify(debug, null, 2)}</pre>\n        </div>\n        <button onClick={() => navigate('/')}>Return to Login</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"auth-callback-container\">\n      <h2>Authenticating with Reddit...</h2>\n      <LoadingSpinner />\n      <p>Please wait while we complete the authentication process.</p>\n      <div className=\"debug-section\">\n        <h3>Status: {debug.stage}</h3>\n        <pre>{JSON.stringify(debug, null, 2)}</pre>\n      </div>\n    </div>\n  );\n}\n\nexport default AuthCallback;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}