{"ast":null,"code":"var _jsxFileName = \"/Users/zachary/Desktop/reddit-saved-gallery/src/components/MediaGallery.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getUserInfo, getSavedPosts } from '../services/redditApi';\nimport MediaItem from './MediaItem';\nimport LoadingSpinner from './LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MediaGallery({\n  token\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [username, setUsername] = useState('');\n  useEffect(() => {\n    const fetchSavedMedia = async () => {\n      if (!token) return;\n      try {\n        setLoading(true);\n\n        // Get user info\n        const userInfo = await getUserInfo(token);\n        setUsername(userInfo.name);\n\n        // Get saved posts with media\n        const savedMedia = await getSavedPosts(token, userInfo.name);\n        setPosts(savedMedia);\n      } catch (err) {\n        console.error('Error fetching saved media:', err);\n        setError('Failed to load your saved posts. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSavedMedia();\n  }, [token]);\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Saved Media for u/\", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Showing \", posts.length, \" saved media posts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-media\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No media found in your saved posts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Try saving some posts with images, videos, or GIFs!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-grid\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(MediaItem, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(MediaGallery, \"AY1Zw4TZ7zCc6gy4rgQRLcYVZEI=\");\n_c = MediaGallery;\nexport default MediaGallery;\nvar _c;\n$RefreshReg$(_c, \"MediaGallery\");","map":{"version":3,"names":["React","useState","useEffect","getUserInfo","getSavedPosts","MediaItem","LoadingSpinner","jsxDEV","_jsxDEV","MediaGallery","token","_s","posts","setPosts","loading","setLoading","error","setError","username","setUsername","fetchSavedMedia","userInfo","name","savedMedia","err","console","fileName","_jsxFileName","lineNumber","columnNumber","className","children","length","map","post","id","_c","$RefreshReg$"],"sources":["/Users/zachary/Desktop/reddit-saved-gallery/src/components/MediaGallery.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getUserInfo, getSavedPosts } from '../services/redditApi';\nimport MediaItem from './MediaItem';\nimport LoadingSpinner from './LoadingSpinner';\n\nfunction MediaGallery({ token }) {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [username, setUsername] = useState('');\n\n  useEffect(() => {\n    const fetchSavedMedia = async () => {\n      if (!token) return;\n      \n      try {\n        setLoading(true);\n        \n        // Get user info\n        const userInfo = await getUserInfo(token);\n        setUsername(userInfo.name);\n        \n        // Get saved posts with media\n        const savedMedia = await getSavedPosts(token, userInfo.name);\n        setPosts(savedMedia);\n      } catch (err) {\n        console.error('Error fetching saved media:', err);\n        setError('Failed to load your saved posts. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchSavedMedia();\n  }, [token]);\n\n  if (loading) return <LoadingSpinner />;\n  \n  if (error) return <div className=\"error-message\">{error}</div>;\n\n  return (\n    <div className=\"gallery-container\">\n      <div className=\"gallery-header\">\n        <h2>Saved Media for u/{username}</h2>\n        <p>Showing {posts.length} saved media posts</p>\n      </div>\n      \n      {posts.length === 0 ? (\n        <div className=\"no-media\">\n          <p>No media found in your saved posts.</p>\n          <p>Try saving some posts with images, videos, or GIFs!</p>\n        </div>\n      ) : (\n        <div className=\"media-grid\">\n          {posts.map(post => (\n            <MediaItem key={post.id} post={post} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MediaGallery;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}