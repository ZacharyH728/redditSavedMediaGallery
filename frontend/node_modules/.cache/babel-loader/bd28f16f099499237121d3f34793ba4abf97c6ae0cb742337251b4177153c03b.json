{"ast":null,"code":"var _jsxFileName = \"/Users/zachary/Desktop/reddit-saved-gallery/src/components/Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { getAuthUrl, getAccessToken } from '../services/redditApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Auth({\n  setToken\n}) {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    // If we're on the callback URL, process the code\n    if (location.pathname === '/auth-callback') {\n      const urlParams = new URLSearchParams(location.search);\n      const code = urlParams.get('code');\n      if (code) {\n        getAccessToken(code).then(token => {\n          setToken(token);\n          navigate('/gallery');\n        }).catch(error => {\n          console.error('Authentication failed:', error);\n          navigate('/');\n        });\n      }\n    }\n  }, [location, navigate, setToken]);\n  const handleLogin = () => {\n    window.location.href = getAuthUrl();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reddit Saved Media Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"View all your saved Reddit posts with images, videos, and GIFs in one place.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"login-button\",\n      onClick: handleLogin,\n      children: \"Sign in with Reddit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Auth, \"gMsdikdDs1f1NUVrv3Ag60oK04k=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useEffect","useNavigate","useLocation","getAuthUrl","getAccessToken","jsxDEV","_jsxDEV","Auth","setToken","_s","navigate","location","pathname","urlParams","URLSearchParams","search","code","get","then","token","catch","error","console","handleLogin","window","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/zachary/Desktop/reddit-saved-gallery/src/components/Auth.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { getAuthUrl, getAccessToken } from '../services/redditApi';\n\nfunction Auth({ setToken }) {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    // If we're on the callback URL, process the code\n    if (location.pathname === '/auth-callback') {\n      const urlParams = new URLSearchParams(location.search);\n      const code = urlParams.get('code');\n      \n      if (code) {\n        getAccessToken(code)\n          .then(token => {\n            setToken(token);\n            navigate('/gallery');\n          })\n          .catch(error => {\n            console.error('Authentication failed:', error);\n            navigate('/');\n          });\n      }\n    }\n  }, [location, navigate, setToken]);\n\n  const handleLogin = () => {\n    window.location.href = getAuthUrl();\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <h2>Reddit Saved Media Gallery</h2>\n      <p>View all your saved Reddit posts with images, videos, and GIFs in one place.</p>\n      <button className=\"login-button\" onClick={handleLogin}>\n        Sign in with Reddit\n      </button>\n    </div>\n  );\n}\n\nexport default Auth;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,UAAU,EAAEC,cAAc,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,SAASC,IAAIA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd;IACA,IAAIW,QAAQ,CAACC,QAAQ,KAAK,gBAAgB,EAAE;MAC1C,MAAMC,SAAS,GAAG,IAAIC,eAAe,CAACH,QAAQ,CAACI,MAAM,CAAC;MACtD,MAAMC,IAAI,GAAGH,SAAS,CAACI,GAAG,CAAC,MAAM,CAAC;MAElC,IAAID,IAAI,EAAE;QACRZ,cAAc,CAACY,IAAI,CAAC,CACjBE,IAAI,CAACC,KAAK,IAAI;UACbX,QAAQ,CAACW,KAAK,CAAC;UACfT,QAAQ,CAAC,UAAU,CAAC;QACtB,CAAC,CAAC,CACDU,KAAK,CAACC,KAAK,IAAI;UACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;UAC9CX,QAAQ,CAAC,GAAG,CAAC;QACf,CAAC,CAAC;MACN;IACF;EACF,CAAC,EAAE,CAACC,QAAQ,EAAED,QAAQ,EAAEF,QAAQ,CAAC,CAAC;EAElC,MAAMe,WAAW,GAAGA,CAAA,KAAM;IACxBC,MAAM,CAACb,QAAQ,CAACc,IAAI,GAAGtB,UAAU,CAAC,CAAC;EACrC,CAAC;EAED,oBACEG,OAAA;IAAKoB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BrB,OAAA;MAAAqB,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCzB,OAAA;MAAAqB,QAAA,EAAG;IAA4E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACnFzB,OAAA;MAAQoB,SAAS,EAAC,cAAc;MAACM,OAAO,EAAET,WAAY;MAAAI,QAAA,EAAC;IAEvD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACtB,EAAA,CArCQF,IAAI;EAAA,QACMN,WAAW,EACXC,WAAW;AAAA;AAAA+B,EAAA,GAFrB1B,IAAI;AAuCb,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}