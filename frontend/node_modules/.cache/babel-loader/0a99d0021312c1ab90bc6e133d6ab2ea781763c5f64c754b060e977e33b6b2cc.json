{"ast":null,"code":"var _jsxFileName = \"/Users/zachary/Desktop/reddit-saved-gallery/src/components/MediaGallery.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MediaItem from './MediaItem';\nimport LoadingSpinner from './LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MediaGallery({\n  token\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [username, setUsername] = useState('');\n  useEffect(() => {\n    const fetchSavedMedia = async () => {\n      if (!token) return;\n      try {\n        setLoading(true);\n\n        // Get user info through proxy\n        console.log(\"Fetching user info...\");\n        const userResponse = await axios.get('http://localhost:4000/api/me', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const userInfo = userResponse.data;\n        setUsername(userInfo.name);\n        console.log(`Fetching saved posts for ${userInfo.name}...`);\n        // Get saved posts through proxy\n        const savedResponse = await axios.get(`http://localhost:4000/api/saved/${userInfo.name}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        // Extract posts and filter for media\n        const savedItems = savedResponse.data.data.children.map(child => child.data).filter(post => {\n          // Check if it's a submission (not a comment)\n          if (!post.title) return false;\n\n          // Check for various media types\n          return post.is_video || post.post_hint === 'image' || post.url.match(/\\.(jpg|jpeg|png|gif)$/) || post.url.includes('imgur.com') || post.url.includes('gfycat.com') || post.url.includes('redgifs.com') || post.url.includes('i.redd.it');\n        });\n        console.log(`Found ${savedItems.length} media posts`);\n        setPosts(savedItems);\n      } catch (err) {\n        var _err$response, _err$response2, _err$response2$data;\n        console.error('Error fetching saved media:', err);\n        console.error('Response data:', (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data);\n        setError(`Failed to load your saved posts: ${((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSavedMedia();\n  }, [token]);\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Saved Media for u/\", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Showing \", posts.length, \" saved media posts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-media\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No media found in your saved posts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Try saving some posts with images, videos, or GIFs!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-grid\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(MediaItem, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(MediaGallery, \"AY1Zw4TZ7zCc6gy4rgQRLcYVZEI=\");\n_c = MediaGallery;\nexport default MediaGallery;\nvar _c;\n$RefreshReg$(_c, \"MediaGallery\");","map":{"version":3,"names":["React","useState","useEffect","axios","MediaItem","LoadingSpinner","jsxDEV","_jsxDEV","MediaGallery","token","_s","posts","setPosts","loading","setLoading","error","setError","username","setUsername","fetchSavedMedia","console","log","userResponse","get","headers","userInfo","data","name","savedResponse","savedItems","children","map","child","filter","post","title","is_video","post_hint","url","match","includes","length","err","_err$response","_err$response2","_err$response2$data","response","message","fileName","_jsxFileName","lineNumber","columnNumber","className","id","_c","$RefreshReg$"],"sources":["/Users/zachary/Desktop/reddit-saved-gallery/src/components/MediaGallery.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MediaItem from './MediaItem';\nimport LoadingSpinner from './LoadingSpinner';\n\nfunction MediaGallery({ token }) {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [username, setUsername] = useState('');\n\n  useEffect(() => {\n    const fetchSavedMedia = async () => {\n      if (!token) return;\n      \n      try {\n        setLoading(true);\n        \n        // Get user info through proxy\n        console.log(\"Fetching user info...\");\n        const userResponse = await axios.get('http://localhost:4000/api/me', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        \n        const userInfo = userResponse.data;\n        setUsername(userInfo.name);\n        \n        console.log(`Fetching saved posts for ${userInfo.name}...`);\n        // Get saved posts through proxy\n        const savedResponse = await axios.get(\n          `http://localhost:4000/api/saved/${userInfo.name}`, \n          {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          }\n        );\n        \n        // Extract posts and filter for media\n        const savedItems = savedResponse.data.data.children\n          .map(child => child.data)\n          .filter(post => {\n            // Check if it's a submission (not a comment)\n            if (!post.title) return false;\n            \n            // Check for various media types\n            return (\n              post.is_video ||\n              post.post_hint === 'image' ||\n              post.url.match(/\\.(jpg|jpeg|png|gif)$/) ||\n              post.url.includes('imgur.com') ||\n              post.url.includes('gfycat.com') ||\n              post.url.includes('redgifs.com') ||\n              post.url.includes('i.redd.it')\n            );\n          });\n        \n        console.log(`Found ${savedItems.length} media posts`);\n        setPosts(savedItems);\n        \n      } catch (err) {\n        console.error('Error fetching saved media:', err);\n        console.error('Response data:', err.response?.data);\n        setError(`Failed to load your saved posts: ${err.response?.data?.error || err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchSavedMedia();\n  }, [token]);\n\n  if (loading) return <LoadingSpinner />;\n  \n  if (error) return <div className=\"error-message\">{error}</div>;\n\n  return (\n    <div className=\"gallery-container\">\n      <div className=\"gallery-header\">\n        <h2>Saved Media for u/{username}</h2>\n        <p>Showing {posts.length} saved media posts</p>\n      </div>\n      \n      {posts.length === 0 ? (\n        <div className=\"no-media\">\n          <p>No media found in your saved posts.</p>\n          <p>Try saving some posts with images, videos, or GIFs!</p>\n        </div>\n      ) : (\n        <div className=\"media-grid\">\n          {posts.map(post => (\n            <MediaItem key={post.id} post={post} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MediaGallery;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}