{"ast":null,"code":"var _jsxFileName = \"/Users/zachary/Desktop/reddit-saved-gallery/src/components/MediaGallery.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport MediaItem from './MediaItem';\nimport LoadingSpinner from './LoadingSpinner';\nimport './MediaGallery.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MediaGallery({\n  token\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [originalPosts, setOriginalPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [initialLoading, setInitialLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [username, setUsername] = useState('');\n  const [visiblePosts, setVisiblePosts] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [isRandomOrder, setIsRandomOrder] = useState(true);\n  const [showHeader, setShowHeader] = useState(true);\n\n  // Track scroll position\n  const [lastScrollY, setLastScrollY] = useState(0);\n\n  // Reference to observe the last post for infinite scrolling\n  const observer = useRef();\n  const lastPostElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setVisiblePosts(prevVisiblePosts => Math.min(prevVisiblePosts + 1, posts.length));\n        if (visiblePosts >= posts.length - 1) {\n          setHasMore(false);\n        }\n      }\n    }, {\n      threshold: 0.5\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore, posts.length, visiblePosts]);\n\n  // Handle scroll events to show/hide header\n  const handleScroll = useCallback(() => {\n    const currentScrollY = window.scrollY;\n\n    // Show header when scrolling up or at the top\n    if (currentScrollY <= 10 || currentScrollY < lastScrollY) {\n      setShowHeader(true);\n    }\n    // Hide header when scrolling down\n    else if (currentScrollY > lastScrollY && currentScrollY > 50) {\n      setShowHeader(false);\n    }\n    setLastScrollY(currentScrollY);\n  }, [lastScrollY]);\n\n  // Add scroll event listener\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll, {\n      passive: true\n    });\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [handleScroll]);\n\n  // Fisher-Yates shuffle algorithm for randomizing posts\n  const shuffleArray = array => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n  useEffect(() => {\n    const fetchSavedMedia = async () => {\n      // Existing code for fetching media...\n      // ...\n    };\n    fetchSavedMedia();\n  }, [token]);\n\n  // Toggle between random and default order\n  const toggleOrderMode = () => {\n    // Existing code...\n  };\n\n  // Reshuffle posts (only in random mode)\n  const handleReshuffle = () => {\n    // Existing code...\n  };\n  if (initialLoading) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 30\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `gallery-header ${showHeader ? 'visible' : 'hidden'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Saved Media for u/\", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Showing \", Math.min(visiblePosts, posts.length), \" of \", posts.length, \" saved media posts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `order-toggle-button ${isRandomOrder ? 'random-active' : 'default-active'}`,\n          onClick: toggleOrderMode,\n          children: isRandomOrder ? 'Switch to Default Order' : 'Switch to Random Order'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), isRandomOrder && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reshuffle-button\",\n          onClick: handleReshuffle,\n          children: \"Shuffle Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(MediaGallery, \"ezcvqT8vqEE6GVRBIXFqPYwb2fI=\");\n_c = MediaGallery;\nexport default MediaGallery;\nvar _c;\n$RefreshReg$(_c, \"MediaGallery\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","MediaItem","LoadingSpinner","jsxDEV","_jsxDEV","MediaGallery","token","_s","posts","setPosts","originalPosts","setOriginalPosts","loading","setLoading","initialLoading","setInitialLoading","error","setError","username","setUsername","visiblePosts","setVisiblePosts","hasMore","setHasMore","isRandomOrder","setIsRandomOrder","showHeader","setShowHeader","lastScrollY","setLastScrollY","observer","lastPostElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevVisiblePosts","Math","min","length","threshold","observe","handleScroll","currentScrollY","window","scrollY","addEventListener","passive","removeEventListener","shuffleArray","array","shuffled","i","j","floor","random","fetchSavedMedia","toggleOrderMode","handleReshuffle","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","_c","$RefreshReg$"],"sources":["/Users/zachary/Desktop/reddit-saved-gallery/src/components/MediaGallery.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport MediaItem from './MediaItem';\nimport LoadingSpinner from './LoadingSpinner';\nimport './MediaGallery.css';\n\nfunction MediaGallery({ token }) {\n  const [posts, setPosts] = useState([]);\n  const [originalPosts, setOriginalPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [initialLoading, setInitialLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [username, setUsername] = useState('');\n  const [visiblePosts, setVisiblePosts] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [isRandomOrder, setIsRandomOrder] = useState(true);\n  const [showHeader, setShowHeader] = useState(true);\n  \n  // Track scroll position\n  const [lastScrollY, setLastScrollY] = useState(0);\n  \n  // Reference to observe the last post for infinite scrolling\n  const observer = useRef();\n  const lastPostElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    \n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setVisiblePosts(prevVisiblePosts => \n          Math.min(prevVisiblePosts + 1, posts.length)\n        );\n        \n        if (visiblePosts >= posts.length - 1) {\n          setHasMore(false);\n        }\n      }\n    }, { threshold: 0.5 });\n    \n    if (node) observer.current.observe(node);\n  }, [loading, hasMore, posts.length, visiblePosts]);\n\n  // Handle scroll events to show/hide header\n  const handleScroll = useCallback(() => {\n    const currentScrollY = window.scrollY;\n    \n    // Show header when scrolling up or at the top\n    if (currentScrollY <= 10 || currentScrollY < lastScrollY) {\n      setShowHeader(true);\n    } \n    // Hide header when scrolling down\n    else if (currentScrollY > lastScrollY && currentScrollY > 50) {\n      setShowHeader(false);\n    }\n    \n    setLastScrollY(currentScrollY);\n  }, [lastScrollY]);\n\n  // Add scroll event listener\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll, { passive: true });\n    \n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [handleScroll]);\n\n  // Fisher-Yates shuffle algorithm for randomizing posts\n  const shuffleArray = (array) => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  useEffect(() => {\n    const fetchSavedMedia = async () => {\n      // Existing code for fetching media...\n      // ...\n    };\n\n    fetchSavedMedia();\n  }, [token]);\n\n  // Toggle between random and default order\n  const toggleOrderMode = () => {\n    // Existing code...\n  };\n\n  // Reshuffle posts (only in random mode)\n  const handleReshuffle = () => {\n    // Existing code...\n  };\n\n  if (initialLoading) return <LoadingSpinner />;\n  \n  if (error) return <div className=\"error-message\">{error}</div>;\n\n  return (\n    <div className=\"gallery-container\">\n      <div className={`gallery-header ${showHeader ? 'visible' : 'hidden'}`}>\n        <h2>Saved Media for u/{username}</h2>\n        <p>Showing {Math.min(visiblePosts, posts.length)} of {posts.length} saved media posts</p>\n        <div className=\"header-buttons\">\n          <button \n            className={`order-toggle-button ${isRandomOrder ? 'random-active' : 'default-active'}`} \n            onClick={toggleOrderMode}\n          >\n            {isRandomOrder ? 'Switch to Default Order' : 'Switch to Random Order'}\n          </button>\n          {isRandomOrder && (\n            <button className=\"reshuffle-button\" onClick={handleReshuffle}>\n              Shuffle Again\n            </button>\n          )}\n        </div>\n      </div>\n      \n      {/* Rest of your component remains the same */}\n    </div>\n  );\n}\n\nexport default MediaGallery;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}